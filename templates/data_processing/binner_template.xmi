<dataprocessing
      xsi:type="Workflow:DataProcessing"
      outgoing=""
      incoming=""
      in="{% for out_column in dataprocessing.out_columns %}//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.{{ loop.index0 }} {% endfor %}"
      out="{% for out_column in dataprocessing.out_columns %}//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.{{ loop.index0 }} {% endfor %}"
      name="binner({{ dataprocessing.in_column_names }})">
    <inputPort
        fileName="{{ dataprocessing.input_filepath }}"
        name="binner({{ dataprocessing.in_column_names }})_input_dataDictionary"
        out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0">
      {% for in_column in dataprocessing.in_columns %}
      <datafield
          xsi:type="Workflow:Continuous"
          name="binner({{ in_column.name }})_input_dataField"
          dataType="Integer"
          displayName="{{ in_column.name }}"
          out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.{{ loop.index0 }}">
        <continuousDef
            href="library_validation.xmi#//@dataprocessingdefinition.7/@inputPort.0/@datafielddefinition.0"/>
        <interval
            rightMargin="8.0"/>
      </datafield>
      {% endfor %}
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.7/@inputPort.0"/>
    </inputPort>
    <outputPort
        fileName="{{ dataprocessing.output_filepath }}"
        name="binner({{ dataprocessing.in_column_names }})_output_dataDictionary"
        in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0">
      {% for out_column in dataprocessing.out_columns %}
      <datafield
          xsi:type="Workflow:Categorical"
          name="binner({{ out_column.name }})_output_dataField"
          displayName="{{ out_column.name }}"
          in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.{{ loop.index0 }}">
        <categoricalDef
            href="library_validation.xmi#//@dataprocessingdefinition.7/@outputPort.0/@datafielddefinition.0"/>
      </datafield>
      {% endfor %}
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.7/@outputPort.0"/>
    </outputPort>
    <dataProcessingDefinition
        xsi:type="Library:Transformation"
        href="library_validation.xmi#//@dataprocessingdefinition.7"/>
    {% for in_column in dataprocessing.in_columns %}
    <parameter
        xsi:type="Workflow:DerivedField"
        name="binner({{ in_column.name }})_param_derivedField"
        der_dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.{{ loop.index0 }}">
      <derivedFieldDef
          href="library_validation.xmi#//@dataprocessingdefinition.7/@parameterdefinition.0"/>
    </parameter>
    {% endfor %}
    {% for bin in dataprocessing.binner.bins %}
    <parameter
        xsi:type="Workflow:DiscretizeBin"
        name="binner({{ dataprocessing.in_column_names }})_param_bin_Unknown"
        binValue="{{ bin.binName }}">
      <discretizeBinDef
          href="library_validation.xmi#//@dataprocessingdefinition.7/@parameterdefinition.1"/>
      <interval
          clousure="{{ bin.closureType }}"
          leftMargin="{{ bin.leftMargin }}"
          rightMargin="{{ bin.rightMargin }}"/>
    </parameter>
    {% endfor %}
{% if dataprocessing.include_contracts %}
{% for in_column in dataprocessing.in_columns %}
  {% set in_index = loop.index0 %}
  {% set contract_index = 3 * loop.index0 + 2 %}
    <contract
        name="binner({{ in_column.name }})_PRECONDITION">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0"/>
      <contract
          xsi:type="Contract:ValueRange"
          name="binner({{ in_column.name }})_PRE_valueRange">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_PRE_input_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0/@contractDefinition/@in.0"/>
        </in>
        <value
            xsi:type="Contract:Interval"
            rightMargin="1000.0"
            closureType="closedClosed">
          <intervalDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0/@contractDefinition/@valuedefinition.0"/>
        </value>
        <valueRangeDef
            href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0/@contractDefinition"/>
      </contract>
    </contract>
    <contract
        name="binner({{ in_column.name }})_POSTCONDITION">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.1"/>
      <contract
          xsi:type="Contract:ValueRange"
          type="POSTCONDITION"
          name="binner({{ in_column.name }})_POST_valueRange"
          belongOp="BELONG">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_POST_input_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0/@contractDefinition/@in.0"/>
        </in>
        <value
            xsi:type="Contract:Interval"
            rightMargin="1000.0"
            closureType="openOpen">
          <intervalDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.0/@contractDefinition/@valuedefinition.0"/>
        </value>
        <valueRangeDef
            href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.1/@contractDefinition"/>
      </contract>
    </contract>
    <contract
        name="binner({{ in_column.name }})_INVARIANT">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2"/>
      <contract
          xsi:type="Contract:Condition"
          type="INVARIANT"
          name="binner({{ in_column.name }})_INV_condition">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_INV_input_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@in.0"/>
        </in>
        <out
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_INV_output_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@out.0"/>
        </out>
        <conditionDef
            href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition"/>
        {% for bin in dataprocessing.binner.bins %}
        <if
            then="//@dataprocessing.{{ dataprocessing.index }}/@contract.{{ contract_index }}/@contract/@then.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_INV_IF_{{ bin.binName }}">
          <ifDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@ifdefinition.0"/>
          <dataCondition
              xsi:type="Contract:Interval"
              leftMargin="{{ bin.leftMargin }}"
              rightMargin="{{ bin.rightMargin }}"
              closureType="{{ bin.closureType }}">
            <intervalDef
                href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@ifdefinition.0/@dataCondition.0"/>
          </dataCondition>
        </if>
        <then
            if="//@dataprocessing.{{ dataprocessing.index }}/@contract.{{ contract_index }}/@contract/@if.{{ loop.index0 }}"
            name="binner({{ in_column.name }})_INV_THEN_{{ bin.binName }}">
          <thenDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@thendefinition.0"/>
          <dataResult
              xsi:type="Contract:FixValue"
              value="{{ bin.binName }}">
            <fixValueDef
                href="library_validation.xmi#//@dataprocessingdefinition.7/@contractdefinition.2/@contractDefinition/@thendefinition.0/@dataResult"/>
          </dataResult>
        </then>
        {% endfor %}
      </contract>
    </contract>
  {% endfor %}
  {% endif %}
  </dataprocessing>
