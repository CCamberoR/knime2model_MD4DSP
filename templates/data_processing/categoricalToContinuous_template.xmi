<dataprocessing
      xsi:type="Workflow:DataProcessing"
      outgoing=""
      incoming=""
      in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0"
      out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0"
      name="stringToNumber({{ dataprocessing.out_column_names }})">
    <inputPort
        fileName="{{ dataprocessing.input_filepath }}"
        name="stringToNumber({{ dataprocessing.out_column_names }})_input_dataDictionary"
        out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0">
      {% for out_column in dataprocessing.out_columns %}
      <datafield
          xsi:type="Workflow:Categorical"
          name="stringToNumber({{ out_column.name }})_input_dataField"
          displayName="{{ out_column.name }}"
          out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.0">
        <categoricalDef
            href="library_validation.xmi#//@dataprocessingdefinition.6/@inputPort.0/@datafielddefinition.0"/>
      </datafield>
      {% endfor %}
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.6/@inputPort.0"/>
    </inputPort>
    <outputPort
        fileName="{{ dataprocessing.output_filepath }}"
        name="stringToNumber({{ dataprocessing.out_column_names }})_output_dataDictionary"
        in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0">
      {% for out_column in dataprocessing.out_columns %}
      <datafield
          xsi:type="Workflow:Continuous"
          name="stringToNumber({{ out_column.name }})_output_dataField"
          dataType="Integer"
          displayName="{{ out_column.name }}"
          in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.0">
        <continuousDef
            href="library_validation.xmi#//@dataprocessingdefinition.6/@outputPort.0/@datafielddefinition.0"/>
        <interval
            rightMargin="8.0"
            clousure="closedClosed"/>
      </datafield>
      {% endfor %}
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.6/@outputPort.0"/>
    </outputPort>
    <dataProcessingDefinition
        xsi:type="Library:Transformation"
        href="library_validation.xmi#//@dataprocessingdefinition.6"/>
    <parameter
        xsi:type="Workflow:CastType"
        name="stringToNumber({{ dataprocessing.out_column_names }})_param_castType"
        type="Integer">
      <castTypeDef
          href="library_validation.xmi#//@dataprocessingdefinition.6/@parameterdefinition.0"/>
    </parameter>
  {% for out_column in dataprocessing.out_columns %}
    <contract
        name="stringToNumber({{ out_column.name }})_INVARIANT">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0"/>
      <contract
          xsi:type="Contract:Condition"
          type="INVARIANT"
          name="INV_condition_{{ out_column.name }}">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.0"
            name="INV_input_datafield_{{ out_column.name }}">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@in.0"/>
        </in>
        <out
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.0"
            name="INV_output_datafield_{{ out_column.name }}">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@out.0"/>
        </out>
        <conditionDef
            href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition"/>
        <if
            belongOp="NOTBELONG"
            then="//@dataprocessing.{{ dataprocessing.index }}/@contract.0/@contract/@then.0"
            name="INV_if_{{ out_column.name }}">
          <ifDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@ifdefinition.0"/>
          <valueCondition
              xsi:type="Contract:SpecialValue">
            <specialValueDef
                href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@ifdefinition.0/@valueCondition.0"/>
          </valueCondition>
        </if>
        <then
            if="//@dataprocessing.{{ dataprocessing.index }}/@contract.0/@contract/@if.0"
            name="INV_if_{{ out_column.name }}"
            belongOp="NOTBELONG">
          <thenDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@thendefinition.0"/>
          <valueResult
              xsi:type="Contract:SpecialValue">
            <specialValueDef
                href="library_validation.xmi#//@dataprocessingdefinition.6/@contractdefinition.0/@contractDefinition/@thendefinition.0/@valueResult"/>
          </valueResult>
        </then>
      </contract>
    </contract>
    {% endfor %}
  </dataprocessing>
