<dataprocessing xsi:type="Workflow:DataProcessing" outgoing="" incoming="" in="" out="" name="mapping({{ dataprocessing.replace_column_name }})">
    <dataProcessingDefinition
        xsi:type="Library:Transformation"
        href="library_validation.xmi#//@dataprocessingdefinition.4"/>
    {% for m_parameter in dataprocessing.mapping_parameters %}
    <parameter
        xsi:type="Workflow:Map"
        name="mapping({{ dataprocessing.replace_column_name }})_param_map_{{ m_parameter.key }}"
        inValue="{{ m_parameter.key }}"
        outvalue="{{ m_parameter.value }}">
      <mapDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@parameterdefinition.0"/>
    </parameter>
    {% endfor %}
    <contract
        name="Mapping({{ dataprocessing.replace_column_name }})_PRECONDITION">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.1"/>
      <contract
          xsi:type="Contract:ValueRange"
          name="mapping({{ dataprocessing.replace_column_name }})_PRE_valueRange">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.0"
            name="mapping({{ dataprocessing.replace_column_name }})_PRE_valueRange_input_datafield">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.1/@contractDefinition/@in"/>
        </in>
        {% for m_parameter in dataprocessing.mapping_parameters %}
        <value
            xsi:type="Contract:FixValue"
            value="{{ m_parameter.key }}">
          <valueFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.1/@contractDefinition/@valuedefinition.0"/>
        </value>
        {% endfor %}
        <valueRangeDef
            href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.1/@contractDefinition"/>
      </contract>
    </contract>
    <contract
        name="Mapping({{ dataprocessing.replace_column_name }})_POSTCONDITION">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.0"/>
      <contract
          xsi:type="Contract:ValueRange"
          type="POSTCONDITION"
          name="mapping({{ dataprocessing.replace_column_name }})_POST_valueRange"
          belongOp="NOTBELONG">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.0"
            name="mapping({{ dataprocessing.replace_column_name }})_POST_input_datafield">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.0/@contractDefinition/@in"/>
        </in>
        {% for m_parameter in dataprocessing.mapping_parameters %}
        <value
            xsi:type="Contract:FixValue"
            value="{{ m_parameter.key }}">
          <valueFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.0/@contractDefinition/@valuedefinition.0"/>
        </value>
        {% endfor %}
        <valueRangeDef
            href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.0/@contractDefinition"/>
      </contract>
    </contract>
    <contract
        name="Mapping({{ dataprocessing.replace_column_name }})_INVARIANT">
      <contractDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2"/>
      <contract
          xsi:type="Contract:Condition"
          type="INVARIANT"
          name="Mapping({{ dataprocessing.replace_column_name }})_INV_condition">
        <in
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.0"
            name="Mapping({{ dataprocessing.replace_column_name }})_INV_input_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@in"/>
        </in>
        <out
            xsi:type="Contract:DataField"
            dataField="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.0"
            name="Mapping({{ dataprocessing.replace_column_name }})_INV_output_dataField">
          <dataFieldDef
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@out"/>
        </out>
        <conditionDef
            href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition"/>
        {% for m_parameter in dataprocessing.mapping_parameters %}
        <if
            then="//@dataprocessing.{{ dataprocessing.index }}/@contract.2/@contract/@then.{{ loop.index0 }}"
            name="Mapping({{ dataprocessing.replace_column_name }})_INV_IF_{{ m_parameter.key }}">
          <ifDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@ifdefinition.0"/>
          <valueCondition
              xsi:type="Contract:FixValue"
              value="{{ m_parameter.key }}">
            <valueFieldDef
                href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@ifdefinition.0/@valueCondition.0"/>
          </valueCondition>
        </if>
        <then
            if="//@dataprocessing.{{ dataprocessing.index }}/@contract.2/@contract/@if.{{ loop.index0 }}"
            name="Mapping({{ dataprocessing.replace_column_name }})_INV_THEN_{{ m_parameter.key }}">
          <thenDefinition
              href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@thendefinition.0"/>
          <valueResult
              xsi:type="Contract:FixValue"
              value="{{ m_parameter.value }}"
              dataType="String">
            <valueFieldDef
                href="library_validation.xmi#//@dataprocessingdefinition.4/@contractdefinition.2/@contractDefinition/@thendefinition.0/@valueResult"/>
          </valueResult>
        </then>
        {% endfor %}
      </contract>
    </contract>
    <inputPort fileName="{{ dataprocessing.inputPath }}" name="mapping(dataprocessing)_input_dataDictionary" out="">
      <datafield
          xsi:type="Workflow:Categorical"
          name="Mapping({{ dataprocessing.replace_column_name }})_input_dataField"
          displayName="({{ dataprocessing.replace_column_name }})"
          out="//@dataprocessing.{{ dataprocessing.index }}/@outputPort.0/@datafield.0">
        <categoricalDef
            href="library_validation.xmi#//@dataprocessingdefinition.4/@inputPort.0/@datafielddefinition.0"/>
      </datafield>
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@inputPort.0"/>
    </inputPort>
    <outputPort
        fileName="{{ dataprocessing.outputPath }}" name="Mapping({{ dataprocessing.replace_column_name }})_output_dataDictionary" in="">
      <datafield
          xsi:type="Workflow:Categorical"
          name="Mapping({{ dataprocessing.replace_column_name }})_output_dataField"
          displayName="({{ dataprocessing.replace_column_name }})"
          in="//@dataprocessing.{{ dataprocessing.index }}/@inputPort.0/@datafield.0">
        <categoricalDef
            href="library_validation.xmi#//@dataprocessingdefinition.0/@outputPort.0/@datafielddefinition.0"/>
      </datafield>
      <dataDictionaryDefinition
          href="library_validation.xmi#//@dataprocessingdefinition.4/@outputPort.0"/>
    </outputPort>
  </dataprocessing>